{{- range $name, $app := .Values.applications }}
  {{- if $app.enabled }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $name }}
  namespace: {{ $.Values.argo.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "{{ $app.syncWave }}"
spec:
  project: {{ $.Values.argo.project }}

  {{- if $app.source.chart }}
  # CASE 1: Helm 차트를 사용하는 경우
  sources:
    - repoURL: {{ $app.source.repoURL }}
      chart: {{ $app.source.chart }}
      targetRevision: {{ $app.source.targetRevision }}
      helm:
        releaseName: {{ $name }}
        {{- if $app.source.helm.parameters }}
        parameters:
        {{- range $p := $app.source.helm.parameters }}
        - name: {{ $p.name }}
          value: "{{ $p.value }}"
        {{- end }}
        {{- end }}
  valueFiles:
  {{- if $app.source.helm.valueFiles }}
  {{- range $path := $app.source.helm.valueFiles }}
  - values/{{ $path }}
  {{- end }}
  {{- end }}
    - repoURL: {{ $.Values.argo.sourceRepo.url }}
      targetRevision: {{ $.Values.argo.sourceRepo.branch }}
      ref: values
  {{- else if $app.source.path }}
  # CASE 2: Git 경로를 사용하는 경우
  source:
    repoURL: {{ $.Values.argo.sourceRepo.url }}
    path: {{ $app.source.path }}
    targetRevision: {{ $.Values.argo.sourceRepo.branch }}
    {{- if $app.source.kustomize }}
    kustomize:
{{ toYaml $app.source.kustomize | indent 6 }}
    {{- end }}
  {{- end }}

  destination:
    server: {{ $.Values.argo.server }}
    namespace: {{ $app.namespace }}

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      {{- if $app.syncOptions }}
      {{- range $opt := $app.syncOptions }}
      - {{ $opt }}
      {{- end }}
      {{- end }}

  {{- if eq $name "rook-ceph-operator" }}
  ignoreDifferences:
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      jsonPointers:
        - /metadata/annotations
        - /metadata/labels
  {{- end }}

  {{- end }}
{{- end }}
